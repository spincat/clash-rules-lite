name: Update Clash Configuration URLs

on:
  schedule:
    # 每天UTC时间00:00 (即北京时间08:00)运行
    - cron: '0 0 * * *'

jobs:
  update-clash-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update Clash configuration file URLs
        env:
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}  # 在环境变量中引用 Gist token
        run: |
          # 获取当前的年、月、日
          YEAR=$(date +"%Y")
          MONTH=$(date +"%m")
          DAY=$(date +"%d")

          # 下载最新的配置文件
          CONFIG_URL="https://gist.githubusercontent.com/spincat/08875e2903320203e92440a0b1ec0a81/raw/clashlink.yaml"
          CONFIG_FILE="clashlink.yaml"
          curl -sSL -H "Authorization: token $GIST_TOKEN" "$CONFIG_URL" > $CONFIG_FILE

          # 使用 sed 更新所有 proxy-providers 的 URL，只修改日期部分，而保留文件序号不变
          sed -i "s|uploads/[0-9]\{4\}/[0-9]\{2\}/\([0-9]\)-[0-9]\{4\}[0-9]\{2\}[0-9]\{2\}.yaml|uploads/$YEAR/$MONTH/\1-$YEAR$MONTH$DAY.yaml|g" $CONFIG_FILE

          # 查看更新后的配置文件确保更改正确
          cat $CONFIG_FILE

          # 使用 Gist API 更新 Gist 文件
          GIST_API="https://api.github.com/gists/08875e2903320203e92440a0b1ec0a81" # 替换 {gist_id} 为实际的 Gist ID
          curl -sSL -X PATCH -H "Authorization: token $GIST_TOKEN" -H "Content-Type: application/json" -d "{\"files\": {\"clashlink.yaml\": {\"content\": \"$(cat $CONFIG_FILE)\"}}}" $GIST_API

          # 不再需要提交和推送文件的更改，因为 Gist 文件已被 API 更新
          # git add, git commit, git push 命令在这里不需要
